cmake_minimum_required(VERSION 2.6)
project(sample)

add_subdirectory(../../llapi ../../mgmt_tool/third_party/llapi)

include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
    message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support.")
endif()

include_directories("${PROJECT_SOURCE_DIR}")
include_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/gflags/include")
include_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/glog/include")
include_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/pciaccess/include")
include_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/jsoncpp/include")
include_directories("${PROJECT_SOURCE_DIR}/../../llapi")

link_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/gflags/lib")
link_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/glog/lib")
link_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/pciutils/lib")
link_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/pciaccess/lib")
link_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/jsoncpp/lib")
link_directories("${PROJECT_SOURCE_DIR}/../../mgmt_tool/third_party/llapi")

link_libraries(glog)
link_libraries(gflags)
link_libraries(pthread)
link_libraries(z)
link_libraries(pciaccess)
#link_libraries(mcap)
link_libraries(pciutils)
link_libraries(jsoncpp)
link_libraries(llapi)

# add the executable
add_executable(dma_check dma_check.cpp)
add_executable(sample_rpaximaster sample_rpaximaster.cpp)
add_executable(sample_vectoradd_ddr sample_vectoradd_ddr.cpp)
add_executable(mmap_read mmap_read.c)
add_executable(mmap_write mmap_write.c)
add_executable(mmap_readq mmap_readq.c)
add_executable(mmap_writeq mmap_writeq.c)

